{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["imgCss","Img","hostRef","onLoad","ionImgDidLoad","emit","onError","ionError","ionImgWillLoad","addIO","src","undefined","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","decoding","alt","part","style"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAMA,MAAM,GAAG,oMAAf;AAEA;;;;UAGMC,G;AACF,qBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,uEAAiB,IAAjB,EAAuBA,OAAvB;;AACA,eAAKC,MAAL,GAAc,YAAM;AAChB,iBAAI,CAACC,aAAL,CAAmBC,IAAnB;AACH,WAFD;;AAGA,eAAKC,OAAL,GAAe,YAAM;AACjB,iBAAI,CAACC,QAAL,CAAcF,IAAd;AACH,WAFD;;AAGA,eAAKG,cAAL,GAAsB,6DAAY,IAAZ,EAAkB,gBAAlB,EAAoC,CAApC,CAAtB;AACA,eAAKJ,aAAL,GAAqB,6DAAY,IAAZ,EAAkB,eAAlB,EAAmC,CAAnC,CAArB;AACA,eAAKG,QAAL,GAAgB,6DAAY,IAAZ,EAAkB,UAAlB,EAA8B,CAA9B,CAAhB;AACH;;;;uCACY;AACT,iBAAKE,KAAL;AACH;;;6CACkB;AACf,iBAAKA,KAAL;AACH;;;kCACO;AAAA;;AACJ,gBAAI,KAAKC,GAAL,KAAaC,SAAjB,EAA4B;AACxB;AACH;;AACD,gBAAI,OAAOC,MAAP,KAAkB,WAAlB,IACA,0BAA0BA,MAD1B,IAEA,+BAA+BA,MAF/B,IAGA,oBAAoBA,MAAM,CAACC,yBAAP,CAAiCC,SAHzD,EAGoE;AAChE,mBAAKC,QAAL;AACA,mBAAKC,EAAL,GAAU,IAAIC,oBAAJ,CAAyB,UAAAC,IAAI,EAAI;AACvC;AACA;AACA;AACA,oBAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,cAAZ,EAA4B;AACxB,wBAAI,CAACC,IAAL;;AACA,wBAAI,CAACL,QAAL;AACH;AACJ,eARS,CAAV;AASA,mBAAKC,EAAL,CAAQK,OAAR,CAAgB,KAAKC,EAArB;AACH,aAfD,MAgBK;AACD;AACAC,wBAAU,CAAC;AAAA,uBAAM,MAAI,CAACH,IAAL,EAAN;AAAA,eAAD,EAAoB,GAApB,CAAV;AACH;AACJ;;;iCACM;AACH,iBAAKI,SAAL,GAAiB,KAAKlB,OAAtB;AACA,iBAAKmB,OAAL,GAAe,KAAKf,GAApB;AACA,iBAAKF,cAAL,CAAoBH,IAApB;AACH;;;qCACU;AACP,gBAAI,KAAKW,EAAT,EAAa;AACT,mBAAKA,EAAL,CAAQU,UAAR;AACA,mBAAKV,EAAL,GAAUL,SAAV;AACH;AACJ;;;mCACQ;AACL,mBAAQ,6DAAE,oDAAF,EAAQ;AAAE,uBAAO,oEAAW,IAAX;AAAT,aAAR,EAAqC,6DAAE,KAAF,EAAS;AAAEgB,sBAAQ,EAAE,OAAZ;AAAqBjB,iBAAG,EAAE,KAAKe,OAA/B;AAAwCG,iBAAG,EAAE,KAAKA,GAAlD;AAAuDzB,oBAAM,EAAE,KAAKA,MAApE;AAA4EG,qBAAO,EAAE,KAAKkB,SAA1F;AAAqGK,kBAAI,EAAE;AAA3G,aAAT,CAArC,CAAR;AACH;;;8BACQ;AAAE,mBAAO,6DAAW,IAAX,CAAP;AAA0B;;;8BACf;AAAE,mBAAO;AAC3B,qBAAO,CAAC,YAAD;AADoB,aAAP;AAEpB;;;;;;AAER5B,SAAG,CAAC6B,KAAJ,GAAY9B,MAAZ","file":"25-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, e as getElement } from './index-29df6f59.js';\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\n/**\n * @part image - The inner `img` element.\n */\nclass Img {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onLoad = () => {\n            this.ionImgDidLoad.emit();\n        };\n        this.onError = () => {\n            this.ionError.emit();\n        };\n        this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n        this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n        this.ionError = createEvent(this, \"ionError\", 7);\n    }\n    srcChanged() {\n        this.addIO();\n    }\n    componentDidLoad() {\n        this.addIO();\n    }\n    addIO() {\n        if (this.src === undefined) {\n            return;\n        }\n        if (typeof window !== 'undefined' &&\n            'IntersectionObserver' in window &&\n            'IntersectionObserverEntry' in window &&\n            'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n            this.removeIO();\n            this.io = new IntersectionObserver(data => {\n                // because there will only ever be one instance\n                // of the element we are observing\n                // we can just use data[0]\n                if (data[0].isIntersecting) {\n                    this.load();\n                    this.removeIO();\n                }\n            });\n            this.io.observe(this.el);\n        }\n        else {\n            // fall back to setTimeout for Safari and IE\n            setTimeout(() => this.load(), 200);\n        }\n    }\n    load() {\n        this.loadError = this.onError;\n        this.loadSrc = this.src;\n        this.ionImgWillLoad.emit();\n    }\n    removeIO() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"src\": [\"srcChanged\"]\n    }; }\n}\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"]}